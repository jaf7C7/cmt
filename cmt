#!/bin/sh
#
# `cmt`: Filter which toggles comments.

: "${CMT:=#}"

parse_opts() {
    lopen="$CMT "
    while [ $# -gt 0 ]; do
        case $1 in
        -c)
            shift
            lopen='/* '
            lclose=' */'
            ;;
        -C)
            shift
            bopen='/*'
            lopen=' * '
            bclose=' */'
            ;;
        -f)
            shift
            exec fmt -p "${1:-$CMT} " -w 88
            ;;
        -h)
            shift
            lopen='<!-- '
            lclose=' -->'
            ;;
        -t)
            shift
            TODO=1
            ;;
        *)
            if [ -f "$1" ]; then
                exec 0<"$1"
                shift
                continue
            fi
            lopen="$1 "
            shift
            ;;
        esac
    done
}

main() {
    parse_opts "$@"
    while IFS= read -r line; do
        if [ -n "$TODO" ]; then
            case $line in
            '- [ ]'*)
                line="- [x]${line#'- [ ]'}"
                ;;
            '- [x]'*)
                line="- [ ]${line#'- [x]'}"
                ;;
            *)
                line="- [ ] ${line}"
                ;;
            esac
            printf '%s\n' "$line"
            continue
        fi
        if [ -z "$first" ] && [ -z "$TODO" ]; then
            if [ -z "$line" ]; then
                printf '\n'
                continue
            fi
            first="$line"
            indent="${line%%[![:space:]]*}"
            if [ "$line" = "${indent}${bopen}" ]; then
                continue
            fi
            if [ -n "$bopen" ]; then
                printf '%s\n' "${indent}${bopen}"
            fi
            if [ -n "$bclose" ]; then
                trap 'printf "%s\n" "${indent}${bclose}"' 0
            fi
        fi
        line="${line#"$indent"}"
        case $line in
        "")
            line="${lopen%%[[:space:]]}${line}${lclose}"
            ;;
        "$bclose")
            trap - 0
            continue
            ;;
        "${lopen%%[[:space:]]}")
            printf '\n'
            continue
            ;;
        "$lopen"*"$lclose")
            line="${line#"$lopen"}"
            line="${line%"$lclose"}"
            ;;
        *)
            line="${lopen}${line}${lclose}"
            ;;
        esac
        printf '%s\n' "${indent}${line}"
    done
}

main "$@"
